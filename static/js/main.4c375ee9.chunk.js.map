{"version":3,"sources":["components/Fetch.js","components/WikiController.js","components/Hints.js","components/UpperUI.js","components/SingleLetter.js","components/WikiDisplay.js","components/InputArea.js","components/Controls.js","components/ResultsButton.js","components/Results.js","components/Display.js","components/Reducer.js","App.js","components/_defaultText.js","serviceWorker.js","index.js"],"names":["Fetch","props","setMyText","setWikiTitle","setNewRandomArticle","disablingButton","newRandomArticle","loremText","focusTextArea","useEffect","fetchWikiApi","fetch","method","then","res","json","data","dataQueryPages","query","pages","console","log","JSON","stringify","articleExtract","Object","keys","extract","replace","length","test","title","current","removeAttribute","catch","setTimeout","WikiController","wikiTitle","className","href","target","rel","onClick","isCounterRunning","resetTimer","setAttribute","ref","Hints","style","visibility","areHintsVisible","UpperUI","minutesFormatted","secondsFormatted","minutesInt","Math","floor","timerValue","secondsInt","minutesStr","toString","secondsStr","counterDisplay","liveResults","speed","accuracy","toggleHints","backgroundColor","onMouseEnter","e","onMouseLeave","SingleLetter","textDecoration","color","letterToRender","fontWeight","WikiDisplay","arrToRender","map","el","i","key","indexOfPartialTextArr","arrOfPartialText","ellipsis","InputArea","onChange","changeTextAreaValue","autoFocus","value","textAreaValue","onPaste","preventDefault","onKeyDown","event","indexOf","preventArrowKeys","isActive","toggleTimer","myTarget","setSelectionRange","onFocus","onBlur","placeholder","Controls","setTimerOnSelect","isDisabled","defaultValue","putFocusOnTextArea","ResultsButton","hidden","toggleResults","areResultsVisible","focusElement","margin","Results","resultsDisplay","resultsMinutes","resultsSeconds","minutesInt_constTimer","finalResults","minutesStr_constTimer","secondsInt_constTimer","secondsStr_constTimer","correct","incorrect","noPenalty","Display","myTextToArr","myText","split","textDividedByLength_floor","lengthOfSinglePart","newArr","j","push","joinedNewArr","join","makeArrOfPartialText","useState","setIndexOfPartialTextArr","textToRender","arrOutOfText","makeDefaultColoredLetters","useCallback","arrToReturn","colorForEachLetter","setColorForEachLetter","setTextAreaValue","prevTextAreaValue","setPrevTextAreaValue","dispatch","colorForEachLetter_2","type","colorForEachLetter_3","displayToReset","setDisplayToReset","arrToSet","makeArrayToRender","resultsObj","state","resultsAfterFinish","Reducer","initialState","currentResults","resultsCorrect","resultsIncorrect","resultsNoPenalty","constantTimerValue","useReducer","action","resultsMaker","Error","allEntries","timerValue_current","noPenaltyKPM","round","penaltyKPM","toReset","setTimerValue","App","setConstantTimerValue","toggleActive","setToReset","setIsCounterRunning","useRef","document","addEventListener","handleKeyPress","setAreHintsVisible","setAreResultsVisible","r","timerInterval","setInterval","t","b","clearInterval","keysPressed","focus","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yPAuHeA,MApHf,SAAeC,GAAO,IAoBlBC,EAOED,EAPFC,UACAC,EAMEF,EANFE,aACAC,EAKEH,EALFG,oBACAC,EAIEJ,EAJFI,gBACAC,EAGEL,EAHFK,iBACAC,EAEEN,EAFFM,UACAC,EACEP,EADFO,cAuFF,OApFAC,qBAAU,YAYR,SAASC,IACHJ,GACFK,MAbU,kKAaQ,CAChBC,OAAQ,QAEPC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAIC,EAAiBD,EAAKE,MAAMC,MAEhCC,QAAQC,IAAIC,KAAKC,UAAUP,EAAM,KAAM,IAUvC,IAIIQ,EAHFP,EAAeQ,OAAOC,KAAKT,GAAgB,IAAIU,QAI9CC,QAAQ,UAAW,IACnBA,QAAQ,UAAW,IACnBA,QAAQ,QAAS,KACjBA,QAAQ,OAAQ,KAChBA,QAAQ,OAAQ,KAEnB,GAAIJ,EAAeK,OAAS,IAG1B,OAFAT,QAAQC,IAAI,kCACZlB,EAAa,qBACNO,IAOT,IAH2B,+DAGDoB,KAAKN,GAG7B,OAFAJ,QAAQC,IAAI,8CACZlB,EAAa,qBACNO,IAiBfR,EAdsBsB,GAChBrB,EAAac,EAAeQ,OAAOC,KAAKT,GAAgB,IAAIc,OAC5DvB,EAAcwB,QAAQC,gBAAgB,eAGvCC,OAAM,WACLd,QAAQC,IAAI,uBACZnB,EAAUK,GACVJ,EAAa,qDACbK,EAAcwB,QAAQC,gBAAgB,eAjE9CvB,GAGAN,GAAoB,GAEpB+B,YAAW,WAET9B,EAAgB2B,QAAQC,gBAAgB,cACvC,OAgEF,CACD3B,EACAC,EACAF,EACAH,EACAE,EACAD,EACAK,IAGK,M,cC3EM4B,MAtCf,SAAwBnC,GAGtB,OAFAmB,QAAQC,IAAIpB,EAAMoC,WAGhB,yBAAKC,UAAU,4BACb,yBAAKA,UAAU,wBACb,uBAAGA,UAAU,oBAAb,6BACA,yBAAKA,UAAU,sBACb,uBACEA,UAAU,0BACVC,KAAI,wCAAmCtC,EAAMoC,WAC7CG,OAAO,SACPC,IAAI,uBAEHxC,EAAMoC,aAIb,4BACEC,UAAU,2BACVI,QAAS,WACFzC,EAAM0C,kBAIT1C,EAAM2C,aACN3C,EAAMG,qBAAoB,GAC1BH,EAAMI,gBAAgB2B,QAAQa,aAAa,YAAY,KALvD5C,EAAMG,qBAAoB,GAC1BH,EAAMI,gBAAgB2B,QAAQa,aAAa,YAAY,KAO3DC,IAAK7C,EAAMI,iBAZb,yBCSS0C,MA3Bf,SAAe9C,GACb,OACE,yBACEqC,UAAU,QACVU,MAAO,CACLC,WAAW,GAAD,OAAKhD,EAAMiD,gBAAkB,UAAY,YAGrD,yBAAKZ,UAAU,yBACb,uBAAGA,UAAU,eAAb,SACA,4BACE,iEACA,mEACA,qCACQ,kCADR,mBACkC,oCADlC,cAGA,qCACQ,2CADR,aAGA,kFACA,2ECwDKa,MA5Ef,SAAiBlD,GAGf,IAMImD,EACAC,EAPAC,EAAaC,KAAKC,MAAMvD,EAAMwD,WAAa,IAC3CC,EAAazD,EAAMwD,WAA0B,GAAbH,EAEhCK,EAAaL,EAAWM,WACxBC,EAAaH,EAAWE,WAM1BR,EADEE,GAAc,GACGK,EAEH,WAAOA,GAIvBN,EADEK,GAAc,GACGG,EAEH,WAAOA,GAGzB,IAAIC,EAAc,UAAMV,EAAN,YAA0BC,GAE5C,OACE,yBAAKf,UAAU,sBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,kBACb,uBAAGA,UAAU,sBAAsBU,MAAO,CAAEC,WAAY,WAAxD,QAIA,uBAAGX,UAAU,yBAAyBwB,KAG1C,yBAAKxB,UAAU,kBACb,yBAAKA,UAAU,kBACb,uBAAGA,UAAU,uBAAb,eAEA,uBAAGA,UAAU,+BACVrC,EAAM8D,YAAYC,QAGvB,yBAAK1B,UAAU,kBACb,uBAAGA,UAAU,uBAAb,YACA,uBAAGA,UAAU,kCACVrC,EAAM8D,YAAYE,SADrB,OAKF,4BACE3B,UAAU,wBACVI,QAASzC,EAAMiE,YACflB,MAAO,CACLmB,gBAAgB,GAAD,OAAKlE,EAAMiD,gBAAkB,QAAU,UAExDkB,aAAc,SAAAC,GACZA,EAAE7B,OAAOQ,MAAMmB,gBAAf,UACElE,EAAMiD,gBAAkB,QAAU,UAGtCoB,aAAc,SAAAD,GACZA,EAAE7B,OAAOQ,MAAMmB,gBAAf,UACElE,EAAMiD,gBAAkB,QAAU,WAbxC,QC3BOqB,MAzBf,SAAsBtE,GACpB,IAAIuE,EAAiB,OAWrB,MARoB,QAAhBvE,EAAMwE,QACRD,EAAiB,aAGC,SAAhBvE,EAAMwE,OAA6C,MAAzBxE,EAAMyE,iBAClCF,EAAiB,aAIjB,0BACExB,MAAO,CACLyB,MAAM,GAAD,OAAKxE,EAAMwE,OAChBD,eAAe,GAAD,OAAKA,GACnBG,WAAW,GAAD,OAfC,YAkBZ1E,EAAMyE,iBCDEE,MAlBf,SAAqB3E,GACnB,OACE,yBAAKqC,UAAU,gCACb,yBAAKA,UAAU,gBACZrC,EAAM4E,YAAYC,KAAI,SAACC,EAAIC,GAC1B,OAAO,kBAAC,EAAD,CAAcN,eAAgBK,EAAG,GAAIN,MAAOM,EAAG,GAAIE,IAAKD,OAEhE/E,EAAMiF,wBAA0BjF,EAAMkF,iBAAiBtD,OAAS,EAC7D5B,EAAMmF,SACN,IAEN,yBAAK9C,UAAU,6BACZrC,EAAMiF,sBAAwB,EADjC,IACqCjF,EAAMkF,iBAAiBtD,UCsCnDwD,MAnDf,SAAmBpF,GAejB,OACE,8BACEqC,UAAU,2BACVgD,SAAU,SAAAjB,GACRpE,EAAMsF,oBAAoBlB,IAE5BmB,WAAS,EAETC,MAAOxF,EAAMyF,cACb5C,IAAK7C,EAAMO,cACXmF,QAAS,SAAAtB,GACPA,EAAEuB,kBAEJC,UAAW,SAAAC,IA3Bf,SAA0BA,IAGiB,IAFtB,CAAC,YAAa,aAAc,UAAW,aAEzCC,QAAQD,EAAMb,MAC7Ba,EAAMF,iBAyBJI,CAAiBF,GACZ7F,EAAMgG,WAAiD,IAFzC,CAAC,YAAa,aAAc,UAAW,aAEtBF,QAAQD,EAAMb,MAChDhF,EAAMiG,eAGVxD,QAzBJ,SAA0BoD,GACxB,IAAIK,EAAWL,EAAMtD,OACrB2D,EAASC,kBAAkBD,EAASV,MAAM5D,OAAQsE,EAASV,MAAM5D,SAwB/DwE,QAAS,WACHpG,EAAMiD,iBACRjD,EAAMiE,eAGVoC,OAAQ,WACFrG,EAAMiD,iBACRjD,EAAMiE,eAGVqC,YAAY,eCPHC,MAvCf,SAAkBvG,GAChB,OACE,yBAAKqC,UAAU,iCACb,yBAAKA,UAAU,eACb,4BACEA,UAAU,+BACVI,QAAS,kBAAMzC,EAAMiG,gBAEpBjG,EAAMgG,SAAW,QAAU,OAE9B,4BACE3D,UAAU,4BACVgD,SAAUrF,EAAMwG,iBAChB3D,IAAK7C,EAAMyG,WACXC,aAAa,MAEb,4BAAQlB,MAAM,KAAd,SACA,4BAAQA,MAAM,MAAd,SACA,4BAAQA,MAAM,MAAd,SACA,4BAAQA,MAAM,OAAd,SACA,4BAAQA,MAAM,OAAd,WAIJ,yBAAKnD,UAAU,gBACb,4BACEA,UAAU,yCACVI,QAAS,SAAAoD,GACP7F,EAAM2C,aACN3C,EAAM2G,uBAJV,YCGOC,MA5Bf,SAAuB5G,GACrB,OACE,yBAAKqC,UAAU,iCACb,4BACEwE,QAAM,EACNxE,UAAU,8BACVI,QAASzC,EAAM8G,cACf/D,MAAO,CACLmB,gBAAgB,GAAD,OAAKlE,EAAM+G,kBAAoB,QAAU,cAE1D5C,aAAc,SAAAC,GACZA,EAAE7B,OAAOQ,MAAMmB,gBAAf,UACElE,EAAM+G,kBAAoB,YAAc,UAG5C1C,aAAc,SAAAD,GACZA,EAAE7B,OAAOQ,MAAMmB,gBAAf,UACElE,EAAM+G,kBAAoB,QAAU,cAGxClE,IAAK7C,EAAMgH,cAjBb,OAmBM,0BAAMjE,MAAO,CAAEkE,OAAQ,gBAAvB,KAnBN,kBC6ESC,MAhFf,SAAiBlH,GAEf,IAAImH,EACAC,EACAC,EAEAC,EAAwBhE,KAAKC,MAC/BvD,EAAMuH,aAAa,gBAAkB,IAEnCC,EAAwBF,EAAsB3D,WAC9C8D,EACFzH,EAAMuH,aAAa,gBAA0C,GAAxBD,EACnCI,EAAwBD,EAAsB9D,WAWlD,OARKyD,EADLE,EACmB,UAAME,EAAN,OACG,GAEjBH,EADLI,EACmB,UAAMC,EAAN,KACG,GAEtBP,EAAc,UAAMC,EAAN,YAAwBC,GAGpC,yBACEhF,UAAU,UACVU,MAAO,CACLC,WAAW,GAAD,OAAKhD,EAAM+G,kBAAoB,UAAY,YAGvD,yBAAK1E,UAAU,2BACb,uBAAGA,UAAU,iBAAb,UACU,IACR,0BAAMU,MAAO,CAAE2B,WAAY,WAA3B,kBACkByC,EADlB,MAKF,yBAAK9E,UAAU,gBACb,yBAAKA,UAAU,WACb,qCAAWrC,EAAMuH,aAAaxD,MAA9B,QACA,0BAAM1B,UAAU,gBAAhB,oEAKF,yBAAKA,UAAU,WACb,wCAAcrC,EAAMuH,aAAavD,SAAjC,KACA,0BAAM3B,UAAU,gBAAhB,gDAMJ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,WACb,+CAAqBrC,EAAMuH,aAAaI,SACxC,0BAAMtF,UAAU,gBAAhB,0DAKF,yBAAKA,UAAU,WACb,iDAAuBrC,EAAMuH,aAAaK,WAC1C,0BAAMvF,UAAU,gBAAhB,4DAIF,yBAAKA,UAAU,WACb,6CAAmBrC,EAAMuH,aAAaM,UAAtC,QACA,0BAAMxF,UAAU,gBAAhB,yDCwKGyF,MAnOf,SAAiB9H,GAEf,IAEI+H,EAAc/H,EAAMgI,OAAOC,MAAM,IACjCC,EAA4B5E,KAAKC,MACnCwE,EAAYnG,OAJW,KAOrBsD,EA6GJ,SAA8BiD,EAAoBJ,GAIhD,IAHA,IAAI7C,EAAmB,GAGdH,EAAI,EAAGA,GAAKmD,EAA2BnD,IAAK,CAEnD,IADA,IAAIqD,EAAS,GAEPC,EAAItD,EAAIoD,EACZE,EAAIF,EAAqBpD,EAAIoD,EAC7BE,IAEAD,EAAOE,KAAKP,EAAYM,IAG1B,IAAIE,EAAeH,EAAOI,KAAK,IAE/BtD,EAAiBoD,KAAKC,GAIxB,OAAOrD,EAjIcuD,CAPE,IAOuCV,GAT1C,EAUoCW,mBAAS,GAV7C,mBAUfzD,EAVe,KAUQ0D,EAVR,KAWhBC,EAAe1D,EAAiBD,GAClC4D,EAAeD,EAAaX,MAAM,IAGhCa,EAA4BC,uBAAY,WAE5C,IADA,IAAIC,EAAc,GACTjE,EAAI,EAAGA,EAfO,IAeiBA,IACtCiE,EAAYV,KAAK,WAEnB,OAAOU,IACN,CAnBsB,MAFH,EAuB8BN,mBAElDI,KAzBoB,mBAuBfG,EAvBe,KAuBKC,EAvBL,OA4BoBR,mBAAS,IA5B7B,mBA4BfjD,EA5Be,KA4BA0D,EA5BA,OA6B4BT,mBAAS,IA7BrC,mBA6BfU,EA7Be,KA6BIC,EA7BJ,KAiChBC,EAAatJ,EAAbsJ,SAEN9I,qBAAU,WAEgBiF,EAAcwC,MAAM,IAK5C,GAAIxC,EAAc7D,OAASwH,EAAkBxH,OAAQ,CACnD,IAAI2H,EAAoB,YAAON,GAE/BK,EAAS,CAAEE,KAAM,qBAGf/D,EAAcA,EAAc7D,OAAS,KACrCiH,EAAapD,EAAc7D,OAAS,KAEpC0H,EAAS,CAAEE,KAAM,mBACjBD,EAAqB9D,EAAc7D,OAAS,GAAK,QAIjD6D,EAAcA,EAAc7D,OAAS,KACrCiH,EAAapD,EAAc7D,OAAS,KAEpC0H,EAAS,CAAEE,KAAM,qBACjBD,EAAqB9D,EAAc7D,OAAS,GAAK,OAGnDsH,EAAsB,YAAIK,IAEtB9D,EAAc7D,SAAWgH,EAAahH,SAExCuH,EAAiB,IAEblE,EAAwBiD,GAC1BgB,EAAsBJ,KACtBH,GACE,SAAA1D,GAAqB,OAAIA,EAAwB,OAGnDiE,EAAsBJ,KACtBH,EAAyB,KAK/B,GAAIlD,EAAc7D,OAASwH,EAAkBxH,OAAQ,CACnD,IAAI6H,EAAoB,YAAOR,GAC/BQ,EAAqBhE,EAAc7D,QAAU,UAC7CsH,EAAsB,YAAIO,IAG5BJ,EAAqB5D,KACpB,CACDA,EACA2D,EAAkBxH,OAClB0H,EACAL,EACAJ,EACA5D,EACAiD,EACAU,EAAahH,OACbkH,IAjGoB,IAqGhBY,EAAsC1J,EAAtC0J,eAAgBC,EAAsB3J,EAAtB2J,kBACtBnJ,qBAAU,WACJkJ,IAMFP,EAAiB,IACjBR,EAAyB,GACzBO,EAAsBJ,KANtBa,GAAkB,MAQnB,CAACD,EAAgBZ,EAA2Ba,IAG/C,IAAM/E,EAyBN,WAEE,IADA,IAAIgF,EAAW,GACN7E,EAAI,EAAGA,EAAI8D,EAAajH,OAAQmD,IAAK,CAC5C,IAAIqD,EAAS,GACbA,EAAOE,KAAKO,EAAa9D,IACzBqD,EAAOE,KAAKW,EAAmBlE,IAC/B6E,EAAStB,KAAKF,GAGhB,OAAOwB,EAlCWC,GA2CpB,OACE,yBAAKxH,UAAU,mBACb,kBAAC,EAAD,CAAOY,gBAAiBjD,EAAMiD,kBAE9B,wBAAIZ,UAAU,SAAd,qBACA,yBAAKA,UAAU,eACb,kBAAC,EAAD,CACEyH,WAAY9J,EAAM8J,WAClB7F,YAAajE,EAAMiE,YACnB8C,kBAAmB/G,EAAM+G,kBACzB9D,gBAAiBjD,EAAMiD,gBACvBO,WAAYxD,EAAMwD,WAClBwC,SAAUhG,EAAMgG,SAChBlC,YAAa9D,EAAM+J,MAAMjG,cAG3B,kBAAC,EAAD,CACEmB,sBAAuBA,EACvBL,YAAaA,EACbM,iBAAkBA,EAClBC,SArBO,QAwBT,kBAAC,EAAD,CACEG,oBA9BR,SAA6BlB,GAC3B+E,EAAiB/E,EAAE7B,OAAOiD,QA8BpBS,YAAajG,EAAMiG,YACnB1F,cAAeP,EAAMO,cACrByF,SAAUhG,EAAMgG,SAChB/C,gBAAiBjD,EAAMiD,gBACvBgB,YAAajE,EAAMiE,YACnBwB,cAAeA,IAGjB,kBAAC,EAAD,CACEQ,YAAajG,EAAMiG,YACnBD,SAAUhG,EAAMgG,SAChBQ,iBAAkBxG,EAAMwG,iBACxBC,WAAYzG,EAAMyG,WAClB9D,WAAY3C,EAAM2C,WAClBgE,mBAAoB3G,EAAM2G,qBAG5B,kBAAC,EAAD,CACEvE,UAAWpC,EAAMoC,UACjBjC,oBAAqBH,EAAMG,oBAC3BC,gBAAiBJ,EAAMI,gBACvB4F,SAAUhG,EAAMgG,SAChBrD,WAAY3C,EAAM2C,WAClBD,iBAAkB1C,EAAM0C,mBAG1B,kBAAC,EAAD,CACEoE,cAAe9G,EAAM8G,cACrBC,kBAAmB/G,EAAM+G,kBACzBC,aAAchH,EAAMgH,gBAIxB,kBAAC,EAAD,CACED,kBAAmB/G,EAAM+G,kBACzB+C,WAAY9J,EAAM8J,WAClBE,mBAAoBhK,EAAMgK,mBAC1BzC,aAAcvH,EAAM+J,MAAMxC,iBCMnB0C,MA7Of,SAAiBjK,GACf,IAAMkK,EAAe,CACnBC,eAAgB,CACdC,eAAgB,EAChBC,iBAAkB,EAClBC,iBAAkB,GAEpBxG,YAAa,CACXC,MAAO,IACPC,SAAU,KACV2D,QAAS,IACTC,UAAW,IACXC,UAAW,IACX,eAAgB7H,EAAMuK,oBAExBhD,aAAc,CACZxD,MAAO,IACPC,SAAU,KACV2D,QAAS,IACTC,UAAW,IACXC,UAAW,IACX,eAAgB,KArBE,EA0BI2C,sBAC1B,SAAiBT,EAAOU,GAAS,IACvBN,EAAmBJ,EAAnBI,eADsB,EAI1BJ,EADFI,eAAkBC,EAHU,EAGVA,eAAgBC,EAHN,EAGMA,iBAAkBC,EAHxB,EAGwBA,iBAE9CxG,EAAgBiG,EAAhBjG,YACAyD,EAAiBwC,EAAjBxC,aAER,GAAoB,mBAAhBkD,EAAOjB,KACT,MAAO,CACLW,eAAgB,CACdC,eAAgBA,EAAiB,EACjCC,iBAAkBA,EAClBC,iBAAkBA,GAEpBxG,YAAY,eACPA,GAELyD,aAAa,eACRA,IAGF,GAAoB,qBAAhBkD,EAAOjB,KAChB,MAAO,CACLW,eAAgB,CACdC,eAAgBA,EAChBC,iBAAkBA,EAAmB,EACrCC,iBAAkBA,GAEpBxG,YAAY,eACPA,GAELyD,aAAa,eACRA,IAGF,GAAoB,qBAAhBkD,EAAOjB,KAChB,MAAO,CACLW,eAAgB,CACdC,eAAgBA,EAChBC,iBAAkBA,EAClBC,iBAAkBA,EAAmB,GAEvCxG,YAAY,eACPA,GAELyD,aAAa,eACRA,IAGF,GAAoB,UAAhBkD,EAAOjB,KAChB,MAAO,CACLW,eAAgB,CACdC,eAAgB,EAChBC,iBAAkB,EAClBC,iBAAkB,GAEpBxG,YAAY,eACPA,GAELyD,aAAa,eACRA,IAGF,GAAoB,mBAAhBkD,EAAOjB,KAChB,MAAO,CACLW,eAAe,eAAMA,GACrBrG,YAAY,eACP4G,EACDN,EACAC,EACAC,EACAtK,EAAMwD,aAGV+D,aAAa,eACRA,IAGF,GAAoB,qBAAhBkD,EAAOjB,KAChB,MAAO,CACLW,eAAe,eAAMA,GACrBrG,YAAY,eACP4G,EAAa,EAAG,EAAG,EAAG,IAE3BnD,aAAa,eACRA,IAGF,GAAoB,oBAAhBkD,EAAOjB,KAChB,MAAO,CACLW,eAAe,eAAMA,GACrBrG,YAAY,eACPA,GAELyD,aAAa,eAGRmD,EAAaN,EAAgBC,EAAkBC,EAAkB,KAIxE,MAAM,IAAIK,MAGZ,SAASD,EAAa/C,EAASC,EAAWgD,EAAYC,GAKpD,IAAIC,EACFxH,KAAKyH,MACY,GAAbH,GACC5K,EAAMuK,mBAAqBM,GAC5B,KACA,IAKFG,EAAaF,EAAe,GAFjB,GAAZlD,GAAmB5H,EAAMuK,mBAAqBM,IAIjD,MAAO,CACL9G,MASIiH,GAAc,EACT1H,KAAKyH,MAAmB,GAAbC,GAAmB,GAE9B,EAXThH,SAgBI4G,EAAa,EACMtH,KAAKyH,MAAOpD,EAAUiD,EAAc,KAAQ,GAG1D,EAnBTjD,QAASA,EACTC,UAAWA,EACXC,UAAWiD,EACX,eAAgB9K,EAAMuK,mBAAmB5G,eAjIDuG,GA1BxB,mBA0BfH,EA1Be,KA0BRT,EA1BQ,KAkLhBtD,EAAsDhG,EAAtDgG,SAAUxC,EAA4CxD,EAA5CwD,WAAY+G,EAAgCvK,EAAhCuK,mBAAoBU,EAAYjL,EAAZiL,QAoBhD,OAnBAzK,qBAAU,WACJwF,GAAYxC,IAAe+G,GAE7BjB,EAAS,CAAEE,KAAM,UACjBF,EAAS,CAAEE,KAAM,sBAERxD,GAAYxC,EAAa,IAAM,GACxC8F,EAAS,CAAEE,KAAM,mBAEfyB,GACF3B,EAAS,CAAEE,KAAM,qBAEfhG,GAAc,IAChB8F,EAAS,CAAEE,KAAM,oBACjBF,EAAS,CAAEE,KAAM,UACjBF,EAAS,CAAEE,KAAM,wBAElB,CAAChG,EAAYwC,EAAUiF,EAASV,IAGjC,kBAAC,EAAD,CAEEH,eAAgBL,EAAMK,eACtBC,iBAAkBN,EAAMM,iBACxBC,iBAAkBP,EAAMO,iBACxBhB,SAAUA,EACVS,MAAOA,EAEPvG,WAAYxD,EAAMwD,WAClB0H,cAAelL,EAAMkL,cACrBX,mBAAoBvK,EAAMuK,mBAC1BtE,YAAajG,EAAMiG,YACnBO,iBAAkBxG,EAAMwG,iBACxBR,SAAUhG,EAAMgG,SAChBrD,WAAY3C,EAAM2C,WAClBsI,QAASjL,EAAMiL,QACfvB,eAAgB1J,EAAM0J,eACtBC,kBAAmB3J,EAAM2J,kBAEzB1G,gBAAiBjD,EAAMiD,gBACvB8D,kBAAmB/G,EAAM+G,kBACzB9C,YAAajE,EAAMiE,YACnB6C,cAAe9G,EAAM8G,cAErBL,WAAYzG,EAAMyG,WAClBlG,cAAeP,EAAMO,cACrBoG,mBAAoB3G,EAAM2G,mBAC1BK,aAAchH,EAAMgH,aAEpBgB,OAAQhI,EAAMgI,OACd5F,UAAWpC,EAAMoC,UACjBjC,oBAAqBH,EAAMG,oBAC3BC,gBAAiBJ,EAAMI,gBACvBsC,iBAAkB1C,EAAM0C,oBCKfyI,MAxOf,WAAgB,IAAD,EACuBzC,mBAAS,IADhC,mBACNlF,EADM,KACM0H,EADN,OAEuCxC,mBAAS,IAFhD,mBAEN6B,EAFM,KAEca,EAFd,OAKoB1C,oBAAS,GAL7B,mBAKN1C,EALM,KAKIqF,EALJ,OAOiB3C,oBAAS,GAP1B,mBAONuC,EAPM,KAOGK,EAPH,OAS+B5C,oBAAS,GATxC,mBASNgB,EATM,KASUC,EATV,OAYmCjB,oBAAS,GAZ5C,mBAYNhG,EAZM,KAYY6I,EAZZ,KAePnL,EAAkBoL,iBAAO,MAflB,EAkBe9C,mBAAS,qBAlBxB,mBAkBNV,EAlBM,KAkBE/H,EAlBF,OAmBqByI,mBAAS,IAnB9B,mBAmBNtG,EAnBM,KAmBKlC,EAnBL,OAqBmCwI,oBAAS,GArB5C,mBAqBNrI,EArBM,KAqBYF,EArBZ,KAwBbK,qBAAU,WACRiL,SAASC,iBAAiB,WAAYC,OAzB3B,MA6BiCjD,oBAAS,GA7B1C,mBA6BNzF,EA7BM,KA6BW2I,EA7BX,OA8BqClD,oBAAS,GA9B9C,mBA8BN3B,EA9BM,KA8Ba8E,EA9Bb,KAwCP/E,EAAgBiC,uBAAY,WAEhC8C,GAAqB,SAAAC,GAAC,OAAKA,OAC1B,IAiEH,SAAS7F,IACPoF,GAAcrF,GAShB,SAASrD,IAEHD,IACF4I,GAAW,GACX3B,GAAkB,IA7EtBnJ,qBAAU,WACJwF,GAAYxC,EAAa,GAAKuD,GAChCD,KAGGC,GAAqBvD,GAAc,GACtCsD,MAED,CAACd,EAAUxC,EAAYuD,EAAmBD,IAG7CtG,qBAAU,WAER,IAAIuL,EAAgB,KA6CpB,OA1CI/F,GAAYxC,EAAa,IAC3BuI,EAAgBC,aAAY,kBAAMd,GAAc,SAAAe,GAAC,OAAIA,EAAI,OAAI,KAExDvJ,GACH6I,GAAoB,SAAAW,GAAC,OAAKA,MAI1BjB,IACFkB,cAAcJ,GACdb,EAAcX,GAEdc,GAAa,GAET3I,GACF6I,GAAoB,SAAAW,GAAC,OAAKA,KAG5BZ,GAAW,KAGRtF,GAAYxC,EAAa,GAC5B2I,cAAcJ,GAIZvI,GAAc,IAChBmG,GAAkB,GAElBwC,cAAcJ,GAEdV,GAAa,GACT3I,GACF6I,GAAoB,SAAAW,GAAC,OAAKA,KAG5BhB,EAAcX,IAMT,kBAAM4B,cAAcJ,MAE1B,CAACvI,EAAYwC,EAAUiF,EAASvI,EAAkB6H,IAuBrD,IAAI6B,EAAc,GAElB,SAAST,GAAe9F,GAElB0E,IAAuB/G,IACzB4I,EAAYvG,EAAMb,MAAO,EAGP,QAAda,EAAMb,KAAiBgB,IACzBC,WACOmG,EAAYvG,EAAMb,MAGvBoH,EAAW,OAA2B,WAAdvG,EAAMb,MAChCrC,WAEOyJ,EAAYvG,EAAMb,OAO/B,IAAMyB,GAAa+E,iBAAO,MAE1BhL,qBAAU,WACJwF,GAAYtD,EACd+D,GAAW1E,QAAQa,aAAa,YAAY,GAE5C6D,GAAW1E,QAAQC,gBAAgB,cAEpC,CAACgE,EAAUtD,IAId,IAAMsE,GAAewE,iBAAO,MACtBjL,GAAgBiL,iBAAO,MAkB7B,SAAS7E,KACPpG,GAAcwB,QAAQsK,QAGxB,OApBA7L,qBAAU,WACRD,GAAcwB,QAAQa,aAAa,YAAY,KAC9C,IAEHpC,qBAAU,WACJgD,GAAc,GAChBwD,GAAajF,QAAQsK,UAEtB,CAAC7I,IAEJhD,qBAAU,WACJwF,GACFW,OAED,CAACX,IAOF,yBAAK3D,UAAU,MAAMuD,UAAW+F,IAC9B,kBAAC,EAAD,CACE3D,OAAQA,EACR/H,UAAWA,EACXmC,UAAWA,EACXlC,aAAcA,EACdG,iBAAkBA,EAClBF,oBAAqBA,EACrBC,gBAAiBA,EACjBE,UC7MO,+kCD8MPC,cAAeA,KAEjB,kBAAC,EAAD,CAEEiD,WAAYA,EACZ0H,cAAeA,EACfX,mBAAoBA,EACpBtE,YAAaA,EACbO,iBA5FN,SAA0BpC,GACxB8G,EAAc9G,EAAE7B,OAAOiD,OACvB4F,EAAsBhH,EAAE7B,OAAOiD,QA2F3BQ,SAAUA,EACVrD,WAAYA,EACZsI,QAASA,EACTvB,eAAgBA,EAChBC,kBAAmBA,EAEnB1G,gBAAiBA,EACjB8D,kBAAmBA,EACnB9C,YAtLN,WACO+B,GACH4F,GAAoB3I,IAqLlB6D,cAAeA,EAEfL,WAAYA,GACZlG,cAAeA,GACfoG,mBAAoBA,GACpBK,aAAcA,GAEdgB,OAAQA,EACR5F,UAAWA,EACXjC,oBAAqBA,EACrBC,gBAAiBA,EACjBsC,iBAAkBA,ME/NN4J,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASnB,SAASoB,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpM,MAAK,SAAAqM,GACjCA,EAAaC,kB","file":"static/js/main.4c375ee9.chunk.js","sourcesContent":["// import React from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction Fetch(props) {\r\n  // fetching data from wiki API ===============\r\n\r\n  // Multiple extracts can only be returned if exintro is set to true.! (if only first part of wiki article is considered)\r\n  // let wikiApiUrl = `https://en.wikipedia.org/w/api.php?format=json&action=query&generator=random&grnnamespace=0&prop=extracts&grnlimit=1&origin=*&explaintext&exsectionformat=plain`;\r\n\r\n  /*  ==== escaping string characters for Regex with escape-string-regexp npm module\r\n  let regexpString = \"'\\\\^!\\\"#$%&()*+,-./:;<=>?@[]^_`{|}~\";\r\n  \r\n  const escapedString = escapeStringRegexp(regexpString);\r\n  let testRegex = new RegExp(escapedString);\r\n  console.log(\"TCL: Display -> testRegex\", testRegex);\r\n  \r\n  let regexpStringEscaped = /'\\\\\\^!\"#\\$%&\\(\\)\\*\\+,-\\.\\/:;<=>\\?@\\[\\]\\^_`\\{\\|\\}~/;\r\n  */\r\n\r\n  /*  // disabling random wiki article button\r\n const disablingButton = useRef(null); */\r\n\r\n  let {\r\n    setMyText,\r\n    setWikiTitle,\r\n    setNewRandomArticle,\r\n    disablingButton,\r\n    newRandomArticle,\r\n    loremText,\r\n    focusTextArea\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    let wikiApiUrl = `https://en.wikipedia.org/w/api.php?format=json&action=query&generator=random&grnnamespace=0&prop=extracts&grnlimit=1&origin=*&explaintext&exsectionformat=plain`;\r\n    fetchWikiApi();\r\n\r\n    //  props.setNewRandomArticle(false);\r\n    setNewRandomArticle(false);\r\n\r\n    setTimeout(() => {\r\n      // props.disablingButton.current.removeAttribute(\"disabled\");\r\n      disablingButton.current.removeAttribute(\"disabled\");\r\n    }, 500);\r\n\r\n    function fetchWikiApi() {\r\n      if (newRandomArticle) {\r\n        fetch(wikiApiUrl, {\r\n          method: \"GET\"\r\n        })\r\n          .then(res => res.json())\r\n          .then(data => {\r\n            let dataQueryPages = data.query.pages;\r\n\r\n            console.log(JSON.stringify(data, null, 2));\r\n            /* \r\n          console.log(\r\n            JSON.stringify(\r\n              dataQueryPages[Object.keys(dataQueryPages)[0]],  // dataQueryPages[Object.keys(dataQueryPages)[0]].extract,\r\n              null,\r\n              2\r\n            )\r\n          );\r\n*/\r\n            let articleNoFormat =\r\n              dataQueryPages[Object.keys(dataQueryPages)[0]].extract;\r\n\r\n            //deleting all brackets and its content from article\r\n            let articleExtract = articleNoFormat\r\n              .replace(/\\(.*\\)/g, \"\")\r\n              .replace(/\\[.*\\]/g, \"\")\r\n              .replace(/\\s\\./g, \".\")\r\n              .replace(/\\s,/g, \",\")\r\n              .replace(/\\s+/g, \" \");\r\n\r\n            if (articleExtract.length < 370) {\r\n              console.log(\"text to short, rendering again\");\r\n              setWikiTitle(\"[Data loading...]\");\r\n              return fetchWikiApi();\r\n            }\r\n\r\n            // regex to exclude non-english characters\r\n            let regexpForEngCharOnly = /^[\\w\\s'\\\\\\^!\"#\\$%&\\(\\)\\*\\+,-\\.\\/:;<=>\\?@\\[\\]\\^_`\\{\\|\\}~ ]*$/i;\r\n            // let regexpForEngCharOnly = /^[\\w\\s'\\\\\\^!\"#\\$%&\\(\\)\\*\\+,-\\.\\/:;<=>\\?@\\[\\]\\^_`\\{\\|\\}~ ]*$/i;\r\n\r\n            if (!regexpForEngCharOnly.test(articleExtract)) {\r\n              console.log(\"characters out of english, rendering again\");\r\n              setWikiTitle(\"[Data loading...]\");\r\n              return fetchWikiApi();\r\n            }\r\n\r\n            setTextToRender(articleExtract);\r\n            setWikiTitle(dataQueryPages[Object.keys(dataQueryPages)[0]].title);\r\n            focusTextArea.current.removeAttribute(\"disabled\");\r\n          })\r\n\r\n          .catch(() => {\r\n            console.log(\"error fetching data\");\r\n            setMyText(loremText);\r\n            setWikiTitle(\"[Error accessing wikipedia - default text loaded]\");\r\n            focusTextArea.current.removeAttribute(\"disabled\");\r\n          });\r\n      }\r\n    }\r\n    function setTextToRender(text) {\r\n      setMyText(text);\r\n    }\r\n  }, [\r\n    newRandomArticle,\r\n    loremText,\r\n    disablingButton,\r\n    setMyText,\r\n    setNewRandomArticle,\r\n    setWikiTitle,\r\n    focusTextArea\r\n  ]);\r\n\r\n  return null;\r\n}\r\n\r\nexport default Fetch;\r\n","import React from \"react\";\r\n// import { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction WikiController(props) {\r\n  console.log(props.wikiTitle);\r\n\r\n  return (\r\n    <div className=\"wiki-controler container\">\r\n      <div className=\"wiki-title-container\">\r\n        <p className=\"wiki-title-label\">Current wikipedia article</p>\r\n        <div className=\"wiki-title-display\">\r\n          <a\r\n            className=\"wiki-title-display-link\"\r\n            href={`https://en.wikipedia.org/wiki/${props.wikiTitle}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            {props.wikiTitle}\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <button\r\n        className=\"btn btn-control btn-wiki\"\r\n        onClick={() => {\r\n          if (!props.isCounterRunning) {\r\n            props.setNewRandomArticle(true);\r\n            props.disablingButton.current.setAttribute(\"disabled\", true);\r\n          } else {\r\n            props.resetTimer();\r\n            props.setNewRandomArticle(true);\r\n            props.disablingButton.current.setAttribute(\"disabled\", true);\r\n          }\r\n        }}\r\n        ref={props.disablingButton}\r\n      >\r\n        Random Wiki Article\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WikiController;\r\n","import React from \"react\";\r\n//import { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction Hints(props) {\r\n  return (\r\n    <div\r\n      className=\"hints\"\r\n      style={{\r\n        visibility: `${props.areHintsVisible ? \"visible\" : \"hidden\"}`\r\n      }}\r\n    >\r\n      <div className=\"inner-hints container\">\r\n        <p className=\"hints-title\">Hints</p>\r\n        <ul>\r\n          <li>Change the timer value (optional)</li>\r\n          <li>Type in typing area to start/resume</li>\r\n          <li>\r\n            Press <b>Tab</b> once to pause, <b>Enter</b> to resume\r\n          </li>\r\n          <li>\r\n            Press <b>Shift+Delete</b> to reset\r\n          </li>\r\n          <li>Click on the article title to visit wikipedia page</li>\r\n          <li>Mouse over results for more information</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Hints;\r\n","import React from \"react\";\r\n// import { useState, useEffect} from \"react\";\r\n\r\nfunction UpperUI(props) {\r\n  // counter display ================================\r\n\r\n  let minutesInt = Math.floor(props.timerValue / 60);\r\n  let secondsInt = props.timerValue - minutesInt * 60;\r\n\r\n  let minutesStr = minutesInt.toString();\r\n  let secondsStr = secondsInt.toString();\r\n\r\n  let minutesFormatted;\r\n  let secondsFormatted;\r\n\r\n  if (minutesInt >= 10) {\r\n    minutesFormatted = minutesStr;\r\n  } else {\r\n    minutesFormatted = `0${minutesStr}`;\r\n  }\r\n\r\n  if (secondsInt >= 10) {\r\n    secondsFormatted = secondsStr;\r\n  } else {\r\n    secondsFormatted = `0${secondsStr}`;\r\n  }\r\n\r\n  let counterDisplay = `${minutesFormatted}:${secondsFormatted}`;\r\n\r\n  return (\r\n    <div className=\"upper-ui container\">\r\n      <div className=\"upper-ui-left\">\r\n        <div className=\"upper-ui-inner\">\r\n          <p className=\"upper-ui-item-label\" style={{ visibility: \"hidden\" }}>\r\n            Time\r\n          </p>\r\n\r\n          <p className=\"upper-ui-item counter\">{counterDisplay}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"upper-ui-right\">\r\n        <div className=\"upper-ui-inner\">\r\n          <p className=\"upper-ui-item-label\">Speed (KPM)</p>\r\n\r\n          <p className=\"upper-ui-item display-speed\">\r\n            {props.liveResults.speed}\r\n          </p>\r\n        </div>\r\n        <div className=\"upper-ui-inner\">\r\n          <p className=\"upper-ui-item-label\">Accuracy</p>\r\n          <p className=\"upper-ui-item display-accuracy\">\r\n            {props.liveResults.accuracy} %\r\n          </p>\r\n        </div>\r\n\r\n        <button\r\n          className=\"btn btn-display-hints\"\r\n          onClick={props.toggleHints}\r\n          style={{\r\n            backgroundColor: `${props.areHintsVisible ? \"black\" : \"green\"}`\r\n          }}\r\n          onMouseEnter={e => {\r\n            e.target.style.backgroundColor = `${\r\n              props.areHintsVisible ? \"green\" : \"black\"\r\n            }`;\r\n          }}\r\n          onMouseLeave={e => {\r\n            e.target.style.backgroundColor = `${\r\n              props.areHintsVisible ? \"black\" : \"green\"\r\n            }`;\r\n          }}\r\n        >\r\n          ?\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpperUI;\r\n","import React from \"react\";\r\n//import { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction SingleLetter(props) {\r\n  let textDecoration = \"none\";\r\n  let fontWeight = \"normal\";\r\n\r\n  if (props.color === \"red\") {\r\n    textDecoration = \"underline\";\r\n  }\r\n\r\n  if (props.color === \"blue\" && props.letterToRender === \" \") {\r\n    textDecoration = \"underline\";\r\n  }\r\n\r\n  return (\r\n    <span\r\n      style={{\r\n        color: `${props.color}`,\r\n        textDecoration: `${textDecoration}`,\r\n        fontWeight: `${fontWeight}`\r\n      }}\r\n    >\r\n      {props.letterToRender}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default SingleLetter;\r\n","import React from \"react\";\r\n//import { useState, useEffect, useRef } from \"react\";\r\nimport SingleLetter from \"./SingleLetter.js\";\r\n\r\nfunction WikiDisplay(props) {\r\n  return (\r\n    <div className=\"wiki-display-outer container\">\r\n      <div className=\"wiki-display\">\r\n        {props.arrToRender.map((el, i) => {\r\n          return <SingleLetter letterToRender={el[0]} color={el[1]} key={i} />;\r\n        })}\r\n        {props.indexOfPartialTextArr !== props.arrOfPartialText.length - 1\r\n          ? props.ellipsis\r\n          : \"\"}\r\n      </div>\r\n      <div className=\"wiki-display-page-counter\">\r\n        {props.indexOfPartialTextArr + 1}/{props.arrOfPartialText.length}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WikiDisplay;\r\n","import React from \"react\";\r\n//import { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction InputArea(props) {\r\n  function preventArrowKeys(event) {\r\n    let arrowKeysArr = [\"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\"];\r\n\r\n    if (arrowKeysArr.indexOf(event.key) !== -1) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  // no text selecting\r\n  function focusOnlyOnClick(event) {\r\n    let myTarget = event.target;\r\n    myTarget.setSelectionRange(myTarget.value.length, myTarget.value.length);\r\n  }\r\n\r\n  return (\r\n    <textarea\r\n      className=\"typing-display container\"\r\n      onChange={e => {\r\n        props.changeTextAreaValue(e);\r\n      }}\r\n      autoFocus\r\n      // crucial for two-way binding! reset button\r\n      value={props.textAreaValue}\r\n      ref={props.focusTextArea}\r\n      onPaste={e => {\r\n        e.preventDefault();\r\n      }}\r\n      onKeyDown={event => {\r\n        let arrowKeysArr = [\"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\"];\r\n        preventArrowKeys(event);\r\n        if (!props.isActive && arrowKeysArr.indexOf(event.key) === -1) {\r\n          props.toggleTimer();\r\n        }\r\n      }}\r\n      onClick={focusOnlyOnClick}\r\n      onFocus={() => {\r\n        if (props.areHintsVisible) {\r\n          props.toggleHints();\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        if (props.areHintsVisible) {\r\n          props.toggleHints();\r\n        }\r\n      }}\r\n      placeholder=\"Type here\"\r\n    ></textarea>\r\n  );\r\n}\r\n\r\nexport default InputArea;\r\n","import React from \"react\";\r\n//import { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction Controls(props) {\r\n  return (\r\n    <div className=\"control-buttons-row container\">\r\n      <div className=\"column-left\">\r\n        <button\r\n          className=\"btn btn-control control-item\"\r\n          onClick={() => props.toggleTimer()}\r\n        >\r\n          {props.isActive ? \"Pause\" : \"Run\"}\r\n        </button>\r\n        <select\r\n          className=\"control-item timer-select\"\r\n          onChange={props.setTimerOnSelect}\r\n          ref={props.isDisabled}\r\n          defaultValue=\"60\"\r\n        >\r\n          <option value=\"5\">00:05</option>\r\n          <option value=\"30\">00:30</option>\r\n          <option value=\"60\">01:00</option>\r\n          <option value=\"120\">02:00</option>\r\n          <option value=\"300\">05:00</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"column-right\">\r\n        <button\r\n          className=\"btn btn-control control-item btn-reset\"\r\n          onClick={event => {\r\n            props.resetTimer();\r\n            props.putFocusOnTextArea();\r\n          }}\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Controls;\r\n","import React from \"react\";\r\n//import { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction ResultsButton(props) {\r\n  return (\r\n    <div className=\"results-buttons-row container\">\r\n      <button\r\n        hidden\r\n        className=\"btn btn-control btn-results\"\r\n        onClick={props.toggleResults}\r\n        style={{\r\n          backgroundColor: `${props.areResultsVisible ? \"Black\" : \"steelblue\"}`\r\n        }}\r\n        onMouseEnter={e => {\r\n          e.target.style.backgroundColor = `${\r\n            props.areResultsVisible ? \"steelblue\" : \"Black\"\r\n          }`;\r\n        }}\r\n        onMouseLeave={e => {\r\n          e.target.style.backgroundColor = `${\r\n            props.areResultsVisible ? \"Black\" : \"steelblue\"\r\n          }`;\r\n        }}\r\n        ref={props.focusElement}\r\n      >\r\n        Show<span style={{ margin: \"auto 0.05em\" }}>|</span>Hide Results\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResultsButton;\r\n","import React from \"react\";\r\n//import { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction Results(props) {\r\n  // counter display proper format in results\r\n  let resultsDisplay;\r\n  let resultsMinutes;\r\n  let resultsSeconds;\r\n\r\n  let minutesInt_constTimer = Math.floor(\r\n    props.finalResults[\"timer length\"] / 60\r\n  );\r\n  let minutesStr_constTimer = minutesInt_constTimer.toString();\r\n  let secondsInt_constTimer =\r\n    props.finalResults[\"timer length\"] - minutesInt_constTimer * 60;\r\n  let secondsStr_constTimer = secondsInt_constTimer.toString();\r\n\r\n  minutesInt_constTimer\r\n    ? (resultsMinutes = `${minutesStr_constTimer}min`)\r\n    : (resultsMinutes = \"\");\r\n  secondsInt_constTimer\r\n    ? (resultsSeconds = `${secondsStr_constTimer}s`)\r\n    : (resultsSeconds = \"\");\r\n\r\n  resultsDisplay = `${resultsMinutes} ${resultsSeconds}`;\r\n\r\n  return (\r\n    <div\r\n      className=\"results\"\r\n      style={{\r\n        visibility: `${props.areResultsVisible ? \"visible\" : \"hidden\"}`\r\n      }}\r\n    >\r\n      <div className=\"inner-results container\">\r\n        <p className=\"results-title\">\r\n          Results{\" \"}\r\n          <span style={{ fontWeight: \"normal\" }}>\r\n            (timer length: {resultsDisplay})\r\n          </span>\r\n        </p>\r\n\r\n        <div className=\"results-main\">\r\n          <div className=\"tooltip\">\r\n            <p>Speed: {props.finalResults.speed} KPM</p>\r\n            <span className=\"tooltip-text\">\r\n              Keys per minute - with penalties (minus 5 for 1 mistake/minute)\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"tooltip\">\r\n            <p>Accuracy: {props.finalResults.accuracy}%</p>\r\n            <span className=\"tooltip-text\">\r\n              Incorrect entries/total entries percentage\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"results-other\">\r\n          <div className=\"tooltip\">\r\n            <p>Correct Entries: {props.finalResults.correct}</p>\r\n            <span className=\"tooltip-text\">\r\n              Total correct entries (including backspace corrected)\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"tooltip\">\r\n            <p>Incorrect Entries: {props.finalResults.incorrect}</p>\r\n            <span className=\"tooltip-text\">\r\n              Total incorrect entries (including backspace corrected)\r\n            </span>\r\n          </div>\r\n          <div className=\"tooltip\">\r\n            <p>Raw Key Speed: {props.finalResults.noPenalty} KPM</p>\r\n            <span className=\"tooltip-text\">\r\n              Keys per minute - without penalties for mistakes\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\n// import SingleLetter from \"./SingleLetter.js\";\r\nimport WikiController from \"./WikiController.js\";\r\nimport Hints from \"./Hints.js\";\r\nimport UpperUI from \"./UpperUI.js\";\r\nimport WikiDisplay from \"./WikiDisplay.js\";\r\nimport InputArea from \"./InputArea.js\";\r\nimport Controls from \"./Controls.js\";\r\nimport ResultsButton from \"./ResultsButton.js\";\r\nimport Results from \"./Results.js\";\r\n\r\n// const escapeStringRegexp = require(\"escape-string-regexp\");\r\n\r\nfunction Display(props) {\r\n  // rendering text ============================\r\n  let lengthOfSinglePart = 363;\r\n\r\n  let myTextToArr = props.myText.split(\"\");\r\n  let textDividedByLength_floor = Math.floor(\r\n    myTextToArr.length / lengthOfSinglePart\r\n  );\r\n\r\n  let arrOfPartialText = makeArrOfPartialText(lengthOfSinglePart, myTextToArr);\r\n  const [indexOfPartialTextArr, setIndexOfPartialTextArr] = useState(0);\r\n  const textToRender = arrOfPartialText[indexOfPartialTextArr];\r\n  let arrOutOfText = textToRender.split(\"\");\r\n\r\n  //make default(gray) color in wiki display area\r\n  const makeDefaultColoredLetters = useCallback(() => {\r\n    let arrToReturn = [];\r\n    for (let i = 0; i < lengthOfSinglePart; i++) {\r\n      arrToReturn.push(\"DimGray\");\r\n    }\r\n    return arrToReturn;\r\n  }, [lengthOfSinglePart]);\r\n\r\n  const [colorForEachLetter, setColorForEachLetter] = useState(\r\n    // setting gray color for each letter by default\r\n    makeDefaultColoredLetters()\r\n  );\r\n\r\n  const [textAreaValue, setTextAreaValue] = useState(\"\");\r\n  const [prevTextAreaValue, setPrevTextAreaValue] = useState(\"\");\r\n\r\n  //coloring letters in display according to errors or no\r\n  //  + counting entries!!\r\n  let { dispatch } = props;\r\n\r\n  useEffect(() => {\r\n\r\n    let arrOutOfTextValue = textAreaValue.split(\"\");\r\n    // console.log(\"arrOutOfTextValue\");\r\n    // console.log(arrOutOfTextValue);\r\n\r\n    // for correct, incorrect, allEntries\r\n    if (textAreaValue.length > prevTextAreaValue.length) {\r\n      let colorForEachLetter_2 = [...colorForEachLetter];\r\n\r\n      dispatch({ type: \"resultsNoPenalty\" });\r\n\r\n      if (\r\n        textAreaValue[textAreaValue.length - 1] ===\r\n        arrOutOfText[textAreaValue.length - 1]\r\n      ) {\r\n        dispatch({ type: \"resultsCorrect\" });\r\n        colorForEachLetter_2[textAreaValue.length - 1] = \"blue\";\r\n      }\r\n\r\n      if (\r\n        textAreaValue[textAreaValue.length - 1] !==\r\n        arrOutOfText[textAreaValue.length - 1]\r\n      ) {\r\n        dispatch({ type: \"resultsIncorrect\" });\r\n        colorForEachLetter_2[textAreaValue.length - 1] = \"red\";\r\n      }\r\n\r\n      setColorForEachLetter([...colorForEachLetter_2]);\r\n\r\n      if (textAreaValue.length === textToRender.length) {\r\n        // e.target.value = \"\";\r\n        setTextAreaValue(\"\");\r\n\r\n        if (indexOfPartialTextArr < textDividedByLength_floor) {\r\n          setColorForEachLetter(makeDefaultColoredLetters());\r\n          setIndexOfPartialTextArr(\r\n            indexOfPartialTextArr => indexOfPartialTextArr + 1\r\n          );\r\n        } else {\r\n          setColorForEachLetter(makeDefaultColoredLetters());\r\n          setIndexOfPartialTextArr(0);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (textAreaValue.length < prevTextAreaValue.length) {\r\n      let colorForEachLetter_3 = [...colorForEachLetter];\r\n      colorForEachLetter_3[textAreaValue.length] = \"DimGray\";\r\n      setColorForEachLetter([...colorForEachLetter_3]);\r\n    }\r\n\r\n    setPrevTextAreaValue(textAreaValue);\r\n  }, [\r\n    textAreaValue,\r\n    prevTextAreaValue.length,\r\n    dispatch,\r\n    colorForEachLetter,\r\n    arrOutOfText,\r\n    indexOfPartialTextArr,\r\n    textDividedByLength_floor,\r\n    textToRender.length,\r\n    makeDefaultColoredLetters\r\n  ]);\r\n\r\n  // reseting display\r\n  let { displayToReset, setDisplayToReset } = props;\r\n  useEffect(() => {\r\n    if (displayToReset) {\r\n      resetDisplay();\r\n      setDisplayToReset(false);\r\n    }\r\n\r\n    function resetDisplay() {\r\n      setTextAreaValue(\"\");\r\n      setIndexOfPartialTextArr(0);\r\n      setColorForEachLetter(makeDefaultColoredLetters());\r\n    }\r\n  }, [displayToReset, makeDefaultColoredLetters, setDisplayToReset]);\r\n\r\n  // arrToRender = [ [letter, color for the letter], ... ]\r\n  const arrToRender = makeArrayToRender();\r\n\r\n  function makeArrOfPartialText(lengthOfSinglePart, myTextToArr) {\r\n    let arrOfPartialText = [];\r\n    //let myTextToArr = text.split(\"\");\r\n\r\n    for (let i = 0; i <= textDividedByLength_floor; i++) {\r\n      let newArr = [];\r\n      for (\r\n        let j = i * lengthOfSinglePart;\r\n        j < lengthOfSinglePart + i * lengthOfSinglePart;\r\n        j++\r\n      ) {\r\n        newArr.push(myTextToArr[j]);\r\n      }\r\n\r\n      let joinedNewArr = newArr.join(\"\");\r\n\r\n      arrOfPartialText.push(joinedNewArr);\r\n    }\r\n\r\n    //console.log(arrOfPartialText);\r\n    return arrOfPartialText;\r\n  }\r\n\r\n  function makeArrayToRender() {\r\n    let arrToSet = [];\r\n    for (let i = 0; i < arrOutOfText.length; i++) {\r\n      let newArr = [];\r\n      newArr.push(arrOutOfText[i]);\r\n      newArr.push(colorForEachLetter[i]);\r\n      arrToSet.push(newArr);\r\n    }\r\n\r\n    return arrToSet;\r\n  }\r\n\r\n  function changeTextAreaValue(e) {\r\n    setTextAreaValue(e.target.value);\r\n  }\r\n\r\n  // for \"...\" displaying at the end of wiki-diplay\r\n  let ellipsis = \"...\";\r\n  return (\r\n    <div className=\"outer-container\">\r\n      <Hints areHintsVisible={props.areHintsVisible} />\r\n\r\n      <h3 className=\"title\">Wiki Speed Typing</h3>\r\n      <div className=\"main-square\">\r\n        <UpperUI\r\n          resultsObj={props.resultsObj}\r\n          toggleHints={props.toggleHints}\r\n          areResultsVisible={props.areResultsVisible}\r\n          areHintsVisible={props.areHintsVisible}\r\n          timerValue={props.timerValue}\r\n          isActive={props.isActive}\r\n          liveResults={props.state.liveResults}\r\n        />\r\n\r\n        <WikiDisplay\r\n          indexOfPartialTextArr={indexOfPartialTextArr}\r\n          arrToRender={arrToRender}\r\n          arrOfPartialText={arrOfPartialText}\r\n          ellipsis={ellipsis}\r\n        />\r\n\r\n        <InputArea\r\n          changeTextAreaValue={changeTextAreaValue}\r\n          toggleTimer={props.toggleTimer}\r\n          focusTextArea={props.focusTextArea}\r\n          isActive={props.isActive}\r\n          areHintsVisible={props.areHintsVisible}\r\n          toggleHints={props.toggleHints}\r\n          textAreaValue={textAreaValue}\r\n        />\r\n\r\n        <Controls\r\n          toggleTimer={props.toggleTimer}\r\n          isActive={props.isActive}\r\n          setTimerOnSelect={props.setTimerOnSelect}\r\n          isDisabled={props.isDisabled}\r\n          resetTimer={props.resetTimer}\r\n          putFocusOnTextArea={props.putFocusOnTextArea}\r\n        />\r\n\r\n        <WikiController\r\n          wikiTitle={props.wikiTitle}\r\n          setNewRandomArticle={props.setNewRandomArticle}\r\n          disablingButton={props.disablingButton}\r\n          isActive={props.isActive}\r\n          resetTimer={props.resetTimer}\r\n          isCounterRunning={props.isCounterRunning}\r\n        />\r\n\r\n        <ResultsButton\r\n          toggleResults={props.toggleResults}\r\n          areResultsVisible={props.areResultsVisible}\r\n          focusElement={props.focusElement}\r\n        />\r\n      </div>\r\n\r\n      <Results\r\n        areResultsVisible={props.areResultsVisible}\r\n        resultsObj={props.resultsObj}\r\n        resultsAfterFinish={props.resultsAfterFinish}\r\n        finalResults={props.state.finalResults}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n","import React from \"react\";\r\nimport { useEffect, useReducer } from \"react\";\r\nimport Display from \"./Display.js\";\r\n\r\nfunction Reducer(props) {\r\n  const initialState = {\r\n    currentResults: {\r\n      resultsCorrect: 0,\r\n      resultsIncorrect: 0,\r\n      resultsNoPenalty: 0\r\n    },\r\n    liveResults: {\r\n      speed: \"-\",\r\n      accuracy: \"- \",\r\n      correct: \"-\",\r\n      incorrect: \"-\",\r\n      noPenalty: \"-\",\r\n      \"timer length\": props.constantTimerValue\r\n    },\r\n    finalResults: {\r\n      speed: \"-\",\r\n      accuracy: \"- \",\r\n      correct: \"-\",\r\n      incorrect: \"-\",\r\n      noPenalty: \"-\",\r\n      \"timer length\": \"\"\r\n    }\r\n  };\r\n\r\n  // for live results & setting <Result/> when the run is finished\r\n  const [state, dispatch] = useReducer(reducer, initialState); // for live results every 2s\r\n  function reducer(state, action) {\r\n    const { currentResults } = state;\r\n    const {\r\n      currentResults: { resultsCorrect, resultsIncorrect, resultsNoPenalty }\r\n    } = state;\r\n    const { liveResults } = state;\r\n    const { finalResults } = state;\r\n\r\n    if (action.type === \"resultsCorrect\") {\r\n      return {\r\n        currentResults: {\r\n          resultsCorrect: resultsCorrect + 1,\r\n          resultsIncorrect: resultsIncorrect,\r\n          resultsNoPenalty: resultsNoPenalty\r\n        },\r\n        liveResults: {\r\n          ...liveResults\r\n        },\r\n        finalResults: {\r\n          ...finalResults\r\n        }\r\n      };\r\n    } else if (action.type === \"resultsIncorrect\") {\r\n      return {\r\n        currentResults: {\r\n          resultsCorrect: resultsCorrect,\r\n          resultsIncorrect: resultsIncorrect + 1,\r\n          resultsNoPenalty: resultsNoPenalty\r\n        },\r\n        liveResults: {\r\n          ...liveResults\r\n        },\r\n        finalResults: {\r\n          ...finalResults\r\n        }\r\n      };\r\n    } else if (action.type === \"resultsNoPenalty\") {\r\n      return {\r\n        currentResults: {\r\n          resultsCorrect: resultsCorrect,\r\n          resultsIncorrect: resultsIncorrect,\r\n          resultsNoPenalty: resultsNoPenalty + 1\r\n        },\r\n        liveResults: {\r\n          ...liveResults\r\n        },\r\n        finalResults: {\r\n          ...finalResults\r\n        }\r\n      };\r\n    } else if (action.type === \"reset\") {\r\n      return {\r\n        currentResults: {\r\n          resultsCorrect: 0,\r\n          resultsIncorrect: 0,\r\n          resultsNoPenalty: 0\r\n        },\r\n        liveResults: {\r\n          ...liveResults\r\n        },\r\n        finalResults: {\r\n          ...finalResults\r\n        }\r\n      };\r\n    } else if (action.type === \"setLiveResults\") {\r\n      return {\r\n        currentResults: { ...currentResults },\r\n        liveResults: {\r\n          ...resultsMaker(\r\n            resultsCorrect,\r\n            resultsIncorrect,\r\n            resultsNoPenalty,\r\n            props.timerValue\r\n          )\r\n        },\r\n        finalResults: {\r\n          ...finalResults\r\n        }\r\n      };\r\n    } else if (action.type === \"resetLiveResults\") {\r\n      return {\r\n        currentResults: { ...currentResults },\r\n        liveResults: {\r\n          ...resultsMaker(0, 0, 0, 0)\r\n        },\r\n        finalResults: {\r\n          ...finalResults\r\n        }\r\n      };\r\n    } else if (action.type === \"setFinalResults\") {\r\n      return {\r\n        currentResults: { ...currentResults },\r\n        liveResults: {\r\n          ...liveResults\r\n        },\r\n        finalResults: {\r\n          // timerValue is set to 0, because that's the proper value if the counter is finished\r\n          // otherwise - bug - infinite number due to timerValue reseting to constantTimerValue\r\n          ...resultsMaker(resultsCorrect, resultsIncorrect, resultsNoPenalty, 0)\r\n        }\r\n      };\r\n    } else {\r\n      throw new Error();\r\n    }\r\n\r\n    function resultsMaker(correct, incorrect, allEntries, timerValue_current) {\r\n      // (constantTimerValue-timerValue) !!! crucial for displaying proper speed&accuracy live\r\n\r\n      // console.log(\"resultsMaker -> timerValue\", timerValue_current);\r\n\r\n      let noPenaltyKPM =\r\n        Math.round(\r\n          ((allEntries * 60) /\r\n            (props.constantTimerValue - timerValue_current)) *\r\n            100\r\n        ) / 100;\r\n\r\n      let incorrectPerMinute =\r\n        (incorrect * 60) / (props.constantTimerValue - timerValue_current);\r\n      // speed penalty: -5 per incorrectEntry/minute (20% or more mistakes === 0KPM!)\r\n      let penaltyKPM = noPenaltyKPM - 5 * incorrectPerMinute;\r\n\r\n      return {\r\n        speed: calcSpeed(),\r\n        accuracy: calcAccuracy(),\r\n        correct: correct,\r\n        incorrect: incorrect,\r\n        noPenalty: noPenaltyKPM,\r\n        \"timer length\": props.constantTimerValue.toString()\r\n      };\r\n\r\n      function calcSpeed() {\r\n        if (penaltyKPM >= 0) {\r\n          return Math.round(penaltyKPM * 10) / 10;\r\n        } else {\r\n          return 0;\r\n        }\r\n      }\r\n\r\n      function calcAccuracy() {\r\n        if (allEntries > 0) {\r\n          let accuracyResult = Math.round((correct / allEntries) * 1000) / 10;\r\n          return accuracyResult;\r\n        } else {\r\n          return 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // for setting results (live & final)=====\r\n  let { isActive, timerValue, constantTimerValue, toReset } = props;\r\n  useEffect(() => {\r\n    if (isActive && timerValue === constantTimerValue) {\r\n      // for displaying 0speed & 0 accuracy if the counter becomes active\r\n      dispatch({ type: \"reset\" });\r\n      dispatch({ type: \"resetLiveResults\" });\r\n      // for live results display every 2s  ==============\r\n    } else if (isActive && timerValue % 2 === 0) {\r\n      dispatch({ type: \"setLiveResults\" });\r\n    }\r\n    if (toReset) {\r\n      dispatch({ type: \"resetLiveResults\" });\r\n    }\r\n    if (timerValue <= 0) {\r\n      dispatch({ type: \"setFinalResults\" });\r\n      dispatch({ type: \"reset\" });\r\n      dispatch({ type: \"resetLiveResults\" });\r\n    }\r\n  }, [timerValue, isActive, toReset, constantTimerValue]);\r\n\r\n  return (\r\n    <Display\r\n      //from reducer\r\n      resultsCorrect={state.resultsCorrect}\r\n      resultsIncorrect={state.resultsIncorrect}\r\n      resultsNoPenalty={state.resultsNoPenalty}\r\n      dispatch={dispatch}\r\n      state={state}\r\n      // timer\r\n      timerValue={props.timerValue}\r\n      setTimerValue={props.setTimerValue}\r\n      constantTimerValue={props.constantTimerValue}\r\n      toggleTimer={props.toggleTimer}\r\n      setTimerOnSelect={props.setTimerOnSelect}\r\n      isActive={props.isActive}\r\n      resetTimer={props.resetTimer}\r\n      toReset={props.toReset}\r\n      displayToReset={props.displayToReset}\r\n      setDisplayToReset={props.setDisplayToReset}\r\n      // hints & results visibility\r\n      areHintsVisible={props.areHintsVisible}\r\n      areResultsVisible={props.areResultsVisible}\r\n      toggleHints={props.toggleHints}\r\n      toggleResults={props.toggleResults}\r\n      // disabling select, menaging focus\r\n      isDisabled={props.isDisabled}\r\n      focusTextArea={props.focusTextArea}\r\n      putFocusOnTextArea={props.putFocusOnTextArea}\r\n      focusElement={props.focusElement}\r\n      // results\r\n      myText={props.myText}\r\n      wikiTitle={props.wikiTitle}\r\n      setNewRandomArticle={props.setNewRandomArticle}\r\n      disablingButton={props.disablingButton}\r\n      isCounterRunning={props.isCounterRunning}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Reducer;\r\n","import React from \"react\";\r\nimport { useState, useEffect, useRef, useCallback } from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport Fetch from \"./components/Fetch.js\";\r\nimport Reducer from \"./components/Reducer.js\";\r\n\r\nimport loremText from \"./components/_defaultText.js\";\r\n\r\nfunction App() {\r\n  const [timerValue, setTimerValue] = useState(60);\r\n  const [constantTimerValue, setConstantTimerValue] = useState(60);\r\n\r\n  // for start/pause button\r\n  const [isActive, toggleActive] = useState(false);\r\n  // for reset button\r\n  const [toReset, setToReset] = useState(false);\r\n  // reseting display if reset btn is clicked or if Timer runs out\r\n  const [displayToReset, setDisplayToReset] = useState(false);\r\n\r\n  // is the counter running\r\n  const [isCounterRunning, setIsCounterRunning] = useState(false);\r\n\r\n  // disabling random wiki article button in <Fetch/>\r\n  const disablingButton = useRef(null);\r\n\r\n  // for displaying text\r\n  const [myText, setMyText] = useState(\"[Data loading...]\");\r\n  const [wikiTitle, setWikiTitle] = useState(\"\");\r\n  // newRandomArticle will be fetched if true\r\n  const [newRandomArticle, setNewRandomArticle] = useState(true);\r\n\r\n  // for keyboard shortcuts\r\n  useEffect(() => {\r\n    document.addEventListener(\"keypress\", handleKeyPress);\r\n  });\r\n\r\n  // hints & results visibility\r\n  const [areHintsVisible, setAreHintsVisible] = useState(false);\r\n  const [areResultsVisible, setAreResultsVisible] = useState(false);\r\n\r\n  function toggleHints() {\r\n    if (!isActive) {\r\n      setAreHintsVisible(!areHintsVisible);\r\n    }\r\n  }\r\n\r\n  // for turning results off when the timer is running  =========\r\n  //useCallback is used so useEffect below won't run on every every time toggleResults function is called\r\n  const toggleResults = useCallback(() => {\r\n    // functional update(r=>!r) so the useCallback don't depend on areResultsVisible\r\n    setAreResultsVisible(r => !r);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isActive && timerValue > 0 && areResultsVisible) {\r\n      toggleResults();\r\n    }\r\n\r\n    if (!areResultsVisible && timerValue <= 0) {\r\n      toggleResults();\r\n    }\r\n  }, [isActive, timerValue, areResultsVisible, toggleResults]);\r\n\r\n  // for counter=======\r\n  useEffect(() => {\r\n    // otherwise there will be error: timerInterval not defined\r\n    let timerInterval = null;\r\n    // let intervalForDisplay = null;\r\n\r\n    if (isActive && timerValue > 0) {\r\n      timerInterval = setInterval(() => setTimerValue(t => t - 1), 1000);\r\n\r\n      if (!isCounterRunning) {\r\n        setIsCounterRunning(b => !b);\r\n      }\r\n    }\r\n\r\n    if (toReset) {\r\n      clearInterval(timerInterval);\r\n      setTimerValue(constantTimerValue);\r\n\r\n      toggleActive(false);\r\n\r\n      if (isCounterRunning) {\r\n        setIsCounterRunning(b => !b);\r\n      }\r\n\r\n      setToReset(false);\r\n    }\r\n    // turning interval off on pause\r\n    if (!isActive && timerValue > 0) {\r\n      clearInterval(timerInterval);\r\n      // clearInterval(intervalForDisplay);\r\n    }\r\n\r\n    if (timerValue <= 0) {\r\n      setDisplayToReset(true);\r\n\r\n      clearInterval(timerInterval);\r\n\r\n      toggleActive(false);\r\n      if (isCounterRunning) {\r\n        setIsCounterRunning(b => !b);\r\n      }\r\n\r\n      setTimerValue(constantTimerValue);\r\n      // setToReset(true);\r\n    }\r\n\r\n    // this equivalent to componentWillUnmount\r\n    // \"our interval would be cleared and set again whenever the count changes\" (useEffect complete guite)\r\n    return () => clearInterval(timerInterval);\r\n    // useEffect will run every time isActive changes\r\n  }, [timerValue, isActive, toReset, isCounterRunning, constantTimerValue]);\r\n\r\n  // for pause button\r\n  function toggleTimer() {\r\n    toggleActive(!isActive);\r\n  }\r\n\r\n  // for time select\r\n  function setTimerOnSelect(e) {\r\n    setTimerValue(e.target.value);\r\n    setConstantTimerValue(e.target.value);\r\n  }\r\n\r\n  function resetTimer() {\r\n    // if (timerValue !== constantTimerValue) {\r\n    if (isCounterRunning) {\r\n      setToReset(true);\r\n      setDisplayToReset(true);\r\n    }\r\n    return;\r\n  }\r\n\r\n  //  for key press\r\n  let keysPressed = {};\r\n\r\n  function handleKeyPress(event) {\r\n    // pause button will work only if the timer hasn't started yet\r\n    if (constantTimerValue !== timerValue) {\r\n      keysPressed[event.key] = true;\r\n\r\n      //if (keysPressed[\"Shift\"] && event.key == \"Pause\") {\r\n      if (event.key === \"Tab\" && isActive) {\r\n        toggleTimer();\r\n        delete keysPressed[event.key];\r\n      }\r\n\r\n      if (keysPressed[\"Shift\"] && event.key === \"Delete\") {\r\n        resetTimer();\r\n\r\n        delete keysPressed[event.key];\r\n      }\r\n    }\r\n    return;\r\n  }\r\n\r\n  // for disabling select\r\n  const isDisabled = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (isActive || isCounterRunning) {\r\n      isDisabled.current.setAttribute(\"disabled\", true);\r\n    } else {\r\n      isDisabled.current.removeAttribute(\"disabled\");\r\n    }\r\n  }, [isActive, isCounterRunning]);\r\n\r\n  // useRef unfocusing btn-hints on textarea focus\r\n  // useRef focusin on textArea if the timer is active\r\n  const focusElement = useRef(null);\r\n  const focusTextArea = useRef(null);\r\n\r\n  useEffect(() => {\r\n    focusTextArea.current.setAttribute(\"disabled\", true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (timerValue <= 0) {\r\n      focusElement.current.focus();\r\n    }\r\n  }, [timerValue]);\r\n\r\n  useEffect(() => {\r\n    if (isActive) {\r\n      putFocusOnTextArea();\r\n    }\r\n  }, [isActive]);\r\n\r\n  function putFocusOnTextArea() {\r\n    focusTextArea.current.focus();\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\" onKeyDown={handleKeyPress}>\r\n      <Fetch\r\n        myText={myText}\r\n        setMyText={setMyText}\r\n        wikiTitle={wikiTitle}\r\n        setWikiTitle={setWikiTitle}\r\n        newRandomArticle={newRandomArticle}\r\n        setNewRandomArticle={setNewRandomArticle}\r\n        disablingButton={disablingButton}\r\n        loremText={loremText}\r\n        focusTextArea={focusTextArea}\r\n      />\r\n      <Reducer\r\n        // timer\r\n        timerValue={timerValue}\r\n        setTimerValue={setTimerValue}\r\n        constantTimerValue={constantTimerValue}\r\n        toggleTimer={toggleTimer}\r\n        setTimerOnSelect={setTimerOnSelect}\r\n        isActive={isActive}\r\n        resetTimer={resetTimer}\r\n        toReset={toReset}\r\n        displayToReset={displayToReset}\r\n        setDisplayToReset={setDisplayToReset}\r\n        // hints & results visibility\r\n        areHintsVisible={areHintsVisible}\r\n        areResultsVisible={areResultsVisible}\r\n        toggleHints={toggleHints}\r\n        toggleResults={toggleResults}\r\n        // disabling select, menaging focus\r\n        isDisabled={isDisabled}\r\n        focusTextArea={focusTextArea}\r\n        putFocusOnTextArea={putFocusOnTextArea}\r\n        focusElement={focusElement}\r\n        // results\r\n        myText={myText}\r\n        wikiTitle={wikiTitle}\r\n        setNewRandomArticle={setNewRandomArticle}\r\n        disablingButton={disablingButton}\r\n        isCounterRunning={isCounterRunning}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","let defaultText = `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n  eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\r\n  minim veniam, quis nostrud exercitation ullamco laboris nisi ut\r\n  aliquip ex ea commodo consequat Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n  eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n  eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut ENIM ad\r\n  minim veniam, quis nostrud exercitation ullamco laboris nisi ut\r\n  aliquip ex ea commodo consequat Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n  eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n  eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\r\n  minim veniam, quis nostrud exercitation ullamco laboris nisi ut\r\n  aliquip ex ea commodo consequat Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n  eiusmod tempor incididunt ut labore et dolore magna ALIQua.`;\r\n\r\n  export default defaultText;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}